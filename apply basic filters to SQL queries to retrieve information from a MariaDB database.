Filter a SQL query
Activity overview
As a security analyst, knowing how to make better queries to retrieve specific pieces of data can help you find the security-related information you need more efficiently.

In this lab activity, you’ll apply basic filters to SQL queries to retrieve information from a MariaDB database.

MariaDB is a popular open source relational database that is compatible with MySQL.

This activity provides you with a great opportunity to apply what you’ve learned and add filters to SQL queries.

This exemplar is a walkthrough of the previous Qwiklab activity, including detailed instructions and solutions. You may use this exemplar if you were unable to complete the lab and/or you need extra guidance in competing lab tasks. You may also refer to this exemplar to prepare for the graded quiz in this module.

This exemplar is a walkthrough of the previous Qwiklab activity, including detailed instructions and solutions. You may use this exemplar if you were unable to complete the lab and/or you need extra guidance in competing lab tasks. You may also refer to this exemplar to prepare for the graded quiz in this module.
Note: The terms row and record are used interchangeably in this lab activity.

Scenario
In this scenario, you need to get specific information about employees, their machines, and the departments they’re in. Your team needs this data to perform various tasks, such as running updates, posting a privacy notice in certain departments, and sending an alert to an employee with an issue on a machine.

You are responsible for finding the required information by querying a database. You’ll add filters to your queries to locate the information more quickly.

Here’s how you’ll do this task: First, you’ll list all organization machines and their operating systems. Second, you’ll list all machines with the operating system OS 2. Third, you’ll list all the employees in the Finance and Sales departments. Fourth, you’ll obtain information about machines.

You’re ready to add filters to SQL queries.

Note: In this lab you’ll be working with the organization database and the tables it contains.

The lab starts with the organization database in the MariaDB shell that is already open. This means you can start with the tasks as soon as you click the Start Lab button.

If you unintentionally exit the organization database in the MariaDB shell, you can reconnect by running the sudo mysql organization command.

Task 1. List all organization machines
In this task, you need to get a list of all organization machines and their operating systems. The data is contained in the machines table. You’ll need to use the SELECT keyword to return specific columns.

Run a SQL query to retrieve only the device_id and operating_system columns from the machines table.

The command to complete this step:

12
SELECT device_id, operating_system 
FROM machines;
The output lists only the selected columns from all the rows in the machines table:

123456789101112
200 rows in set (0.028 sec)
+--------------+------------------+
|...                              |
+--------------+------------------+
| device_id    | operating_system |
+--------------+------------------+
| a184b775c707 | OS 1             |
| a192b174c940 | OS 2             |
| a305b818c708 | OS 3             |
| a317b635c465 | OS 1             |

How many rows were returned from the machines table? (You can view the number of rows at the bottom of the output.)

Answer: The machines table returned 200 rows.

Task 2. Retrieve a list of the machines with OS 2
In this task, you need to obtain a list of all machines with the 'OS 2' operating system because these machines need an update. To get this information, you’ll run your first SQL query with a filter.

Select all the records from the machines table with a value of 'OS 2' in the operating_system column. Replace the value X with the correct string:

123
SELECT device_id, operating_system
FROM machines 
WHERE operating_system = 'X';
The command to complete this step:

123
SELECT device_id, operating_system 
FROM machines 
WHERE operating_system = 'OS 2';
Note: The  WHERE clause allows you to filter the results returned by a query by returning only the records that satisfy the condition.

The output displays the selected columns of the machines table, filtered by the operating system:

123456
| a821b452c176 | OS 2             |
| b157c491d493 | OS 2             |
| b264c773d977 | OS 2             |
|...                              |
+--------------+------------------+
80 rows in set (0.264 sec)
How many machines in the database use the OS 2 operating system?

Answer: There are 80 machines in the database that use the OS 2 operating system.

Task 3. List employees in specific departments
In this task, you need to retrieve a list of all the employees in the Finance and Sales departments to obtain their office numbers. A notice about handling confidential financial information will be posted to these offices.

Filter the rows returned from department column in the employees table to include only employees from the 'Finance' department. Replace X with the appropriate column name and Y with the appropriate value to complete the filter:

1
WHERE X = 'Y';
The correct query to solve this step:

123
SELECT * 
FROM employees 
WHERE department = 'Finance';
The output displays the contents of the employees table, including only employees in the Finance department.

What is the employee_id of the first row returned?

Answer: The employee_id of the first row returned is 1003.

2. Modify the previous query so that it returns employees who are in the 'Sales' department.

The correct query to solve this step:

1
WHERE department = 'Sales';
The output will display the contents of the employees table, including only employees in the Sales department.

How many employees work in the Sales department?

Answer: There are 33 employees who work in the Sales department.

Task 4. Identify employee machines
Your team recently discovered that there are issues with machines in the South building. In this task, you need to obtain certain employee and computer information.

A machine in 'South-109' has an issue. You need to determine which employee uses that computer so you can send them an alert.

Write a query to identify which employee uses the office in 'South-109'. (The data must be returned from the office column in the employees table.)

The correct query to solve this step:

1
WHERE office = 'South-109';
Which of the following employees uses the computer with the issue?

Answer: The user ID of the employee with the computer issue is jlansky.

Next, your team has determined that there is an issue with all the machines in the South building. Offices in the organization are named with the building name, a hyphen, and the office number in that building (for example, 'South-109').

2. Modify the query you used in the previous step so that it returns information on all the employees in the 'South' building. Use the LIKE operator with % in this query.

The correct query to solve this step:

1
WHERE office LIKE 'South%';
Note: The LIKE keyword in SQL performs simple string matches. The matching pattern may include the wildcard % to represent a string of any length. This wildcard may be placed both before and after the targeted substring.

Which department does the first employee listed in the South building belong to?

Answer: The first employee on the list returned works in the Finance department.

Conclusion
Great work!

You now have practical experience in using SQL to

apply the WHERE clause to filter what a SQL query returns and

use the LIKE operator to filter for patterns.

You’re well on your way to running SQL queries to get specific data from a database.
