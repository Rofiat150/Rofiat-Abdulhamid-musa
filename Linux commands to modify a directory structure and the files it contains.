Activity overview
In this lab activity, you’ll use Linux commands to modify a directory structure and the files it contains.

You’ll also use the nano text editor to add text to a file.

You previously learned that directories help you organize subdirectories and files in Linux. As a security analyst, creating, removing, and editing directories and files are core tasks you’ll need to perform to help you to manage data.

When data is well organized, you can more easily detect issues and keep data safe.

With that in mind, you’re now ready to practice what you've learned.

Scenario
In this scenario, you need to ensure that the /home/analyst directory is properly organized.

You have to make a few changes to the /home/analyst directory and the files it contains.

You also have to edit a file to record the changes or updates you make to the directory.

Note: The lab starts with your user account, called analyst, already logged in to a Bash shell. This means you can start with the tasks as soon as you click the Start Lab button.
When you start, the /home/analyst directory contains the following subdirectories and files:

home
└── analyst
    ├── notes
    │   ├── Q3patches.txt
    │   └── tempnotes.txt
    ├── reports
    │   ├── Q1patches.txt
    │   └── Q2patches.txt
    └── temp
You need to modify the /home/analyst directory to the following directory and file structure:

home
└── analyst
    ├── logs
    ├── notes
    │   └── tasks.txt    
    └── reports
        ├── Q1patches.txt
        └── Q2patches.txt
        └── Q3patches.txt
Here’s how you’ll do this: First, you’ll create a new subdirectory called logs in the /home/analyst directory. Next, you’ll remove the temp subdirectory. Then, you’ll move the Q3patches.txt file to the reports subdirectory and delete the tempnotes.txt file. Finally, you’ll create a new .txt file called tasks in the notes subdirectory and add a note to the file describing the tasks you've performed.

You’ll need to use the commands learned in the video lesson to complete these steps.

This might sound like quite a number of tasks to perform, but you’ll be guided on how to do this.

Disclaimer: For optimal performance and compatibility, it is recommended to use either Google Chrome or Mozilla Firefox browsers while accessing the labs.
Start your lab
You'll need to start the lab before you can access the materials. To do this, click the green “Start Lab” button at the top of the screen.

Lab Start button displayed.

After you click the Start Lab button, you will see a shell, where you will be performing further steps in the lab. You should have a shell like this:

Linux Terminal displayed. 

When you have completed all the tasks, refer to the End your Lab section that follows the tasks for information on how to end your lab.

Task 1. Create a new directory
First, you must create a dedicated subdirectory called logs, which will be used to store all future log files.

Create a new subdirectory called logs in the /home/analyst directory.
The command to complete this step:

mkdir logs
Copied!
List the contents of the /home/analyst directory to confirm that you’ve successfully created the new logs subdirectory.
The command to complete this step:

ls
Copied!
The output should list the original three directories and the new logs subdirectory:

logs notes reports temp
Click Check my progress to verify that you have completed this task correctly.

Create a new directory
Task 2. Remove a directory
Next, you must remove the temp directory, as you’ll no longer be placing items in it.

Remove the /home/analyst/temp directory.
The command to complete this step:

rmdir temp
Copied!
List the contents of the /home/analyst directory to confirm that you have removed the temp subdirectory.
The command to complete this step:

ls 
Copied!
The temp directory should no longer be listed:

logs notes reports
Click Check my progress to verify that you have completed this task correctly.

Remove a directory
Task 3. Move a file
The Q3patches.txt file contains notes taken on third-quarter patches and is now in the correct reporting format.

You must move the  Q3patches.txt file from the notes directory to the reports directory.

Navigate to the /home/analyst/notes directory.
The command to complete this step:

cd /home/analyst/notes
Copied!
The previous command used the absolute path, you could use the relative path as follows:

cd notes
Copied!
Move the Q3patches.txt file from the /home/analyst/notes directory to the /home/analyst/reports directory.
The command to complete this step:

mv Q3patches.txt /home/analyst/reports/
Copied!
List the contents of the /home/analyst/reports directory to confirm that you have moved the file successfully.
The command to complete this step:

ls /home/analyst/reports
Copied!
When you list the contents of the reports directory, it should show that three quarterly report files are now in the reports directory:

Q1patches.txt Q2patches.txt Q3patches.txt 
Click Check my progress to verify that you have completed this task correctly.

Move a file
Task 4. Remove a file
Next, you must delete an unused file called tempnotes.txt from the /home/analyst/notes directory.

Remove the tempnotes.txt file from the /home/analyst/notes directory.
The command to complete this step:

rm tempnotes.txt
Copied!
List the contents of the /home/analyst/notes directory to confirm that you’ve removed the file successfully.
The command to complete this step:

ls
Copied!
No files should be listed in the notes directory.

Click Check my progress to verify that you have completed this task correctly.

Remove a file
Task 5. Create a new file
Now, you must create a file named tasks.txt in the /home/analyst/notes directory that you’ll use to document completed tasks.

Use the touch command to create an empty file called tasks.txt in the /home/analyst/notes directory.
The command to complete this step:

touch tasks.txt
Copied!
List the contents of the /home/analyst/notes directory to confirm that you have created a new file.
The command to complete this step:

ls
Copied!
A file called tasks.txt should now exist in the notes directory:

tasks.txt
Click Check my progress to verify that you have completed this task correctly.

Create a new file
Task 6. Edit a file
Finally, you must use the nano text editor to edit the tasks.txt file and add a note describing the tasks you’ve completed.

Using the nano text editor, open the tasks.txt file that is located in the /home/analyst/notes directory.
The command to complete this step:

nano tasks.txt
Copied!
Note: This action changes the shell from the normal Bash interface to the nano text editor interface.
Copy and paste the following text into the text input area of the nano editor:
  Completed tasks
  1. Managed file structure in /home/analyst
Copied!
Press CTRL+X to exit the nano text editor.
This triggers a prompt asking Save modified bufferer?

Press Y to confirm that you want to save the new data to your file. (Answering "no" will discard changes.)

Press ENTER to confirm that File Name to Write is tasks.txt.

Note: The recommended sequence of commands for saving a file with the nano text editor is to use CTRL+O to tell nano to save the file and then use CTRL+X to exit immediately.
In this web-based lab environment, the CTRL+O command is intercepted by your web browser and is interpreted as a request to save the web page. The sequence used here is a commonly used alternative that achieves the same end result.

Use the clear command to clear the Bash shell window and remove any traces of the nano text input area.

The command to complete this step:

clear
Copied!
Note: Most Bash shells typically handle the screen cleanup after you exit nano. In this lab environment, nano sometimes leaves some text clutter around the edges of the screen that the clear command cleans up for you.
Display the contents of the tasks.txt file to confirm that it contains the updated task details.
cat tasks.txt
Copied!
This file should now contain the contents of the tasks.txt file that you added and saved in previous steps:

  Completed tasks
  1. Managed file structure in /home/analyst
Click Check my progress to verify that you have completed this task correctly.

Edit a file
Conclusion
Great work!

You now have practical experience in using basic Linux Bash shell commands to

create and remove directories,
copy, move, and remove files, and
edit files with the nano text editor.
You’re well on your way to managing directories and files in a Linux environment!

End your lab
Before you end the lab, make sure you’re satisfied that you’ve completed all the tasks, and follow these steps:

Click End Lab. A pop-up box will appear. Click Submit to confirm that you're done. Ending the lab will remove your access to the Bash shell. You won’t be able to access the work you've completed in it again.
